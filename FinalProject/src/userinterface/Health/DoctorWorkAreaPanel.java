/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Health;

import Business.Beneficiaries.Beneficiary;
import Business.EcoSystem;
import Business.Enterprise.HealthEnterprise;
import Business.Enterprise.WelfareEnterprise;
import Business.Network.Network;
import Business.Organization.HealthOrganization;
import Business.Organization.Organization;
import Business.Organization.WelfareOrganization;
import Business.UserAccount.UserAccount;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sindhu
 */
public class DoctorWorkAreaPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorWorkAreaPanel
     */
   
     JPanel userProcessContainer;
    HealthEnterprise enterprise;
    EcoSystem ecosystem;
    UserAccount ua;
    public DoctorWorkAreaPanel(JPanel userProcessContainer, EcoSystem business, HealthEnterprise enterprise, Organization organization, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.ecosystem=business;
        this.ua = account;
        bentable.getTableHeader().setFont(new Font("TImes New Roman",Font.BOLD,18));
        bentable.setRowHeight(30);
       bentable.setRowMargin(10);
        populateTable();
        populateComboBox();
    }
    
    private void populateComboBox(){
        availabeAssitant.removeAllItems();
        for(HealthOrganization organization:enterprise.getHealthOrganizationDirectory().getHealthOrganizationList()){
            for(UserAccount ua:organization.getUserAccountDirectory().getUserAccountList()){
                if(String.valueOf(ua.getRole()).endsWith("NurseRole") && ua.getStatus().equals("Available")){
                    availabeAssitant.addItem(ua.getEmployee().getName());
                }
            }
        }
    }
    
    private void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel)bentable.getModel();
        dtm.setRowCount(0);
        for(Network net:ecosystem.getNetworkList()){
            for(WelfareEnterprise ent:net.getEnterpriseDirectory().getWelfareEnterpriseList()){
              for(WelfareOrganization org:ent.getWelfareOrganizationDirectory().getWelfareOrganizationList()){
                  if(org.getName().equals("Beneficiary Organization")){
                    for(Beneficiary ben:org.getBeneficiaryDirectory().getBeneficiaryDirectory()){
                       if(ben.getAssistanceType().equals("HealthCare") && ben.getAssignedDoc()!=null){
                           if(ben.getAssignedDoc().equals(ua.getEmployee().getName())){
                                Object[] row = new Object[dtm.getColumnCount()];
                                 row[0] = ben.getBeneficiaryId();
                                 row[1] = ben.getBeneficiaryName();
                                 System.out.println(ben.getCheckStatus());
                                 if(ben.getDocStatus()==null){
                                     row[2]="Pending";
                                 }else{
                                     row[2]=ben.getDocStatus();
                                 }
                                 if(ben.getHealthIssue()==null){
                                     row[3]="NA";
                                 }else{
                                     row[3]=ben.getHealthIssue();
                                 }
                                 dtm.addRow(row);
                           }
                       }
                    }
                  }
              }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bentable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        availabeAssitant = new javax.swing.JComboBox<>();
        assignBtn = new javax.swing.JButton();
        checkBtn = new javax.swing.JButton();
        imgLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(241, 236, 236));
        setLayout(null);

        bentable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bentable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bentable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Id", "Patient name", "Status", "Health Issue"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bentable.setRowHeight(20);
        bentable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bentableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bentable);

        add(jScrollPane1);
        jScrollPane1.setBounds(350, 120, 452, 170);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Available Assistant:");
        add(jLabel1);
        jLabel1.setBounds(411, 330, 160, 22);

        availabeAssitant.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        availabeAssitant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        availabeAssitant.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(153, 0, 51)));
        availabeAssitant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availabeAssitantActionPerformed(evt);
            }
        });
        add(availabeAssitant);
        availabeAssitant.setBounds(580, 330, 110, 30);

        assignBtn.setBackground(new java.awt.Color(102, 102, 0));
        assignBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        assignBtn.setText("Assign Assistant");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });
        add(assignBtn);
        assignBtn.setBounds(660, 440, 197, 40);

        checkBtn.setBackground(new java.awt.Color(102, 102, 0));
        checkBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        checkBtn.setText("Checkup done");
        checkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBtnActionPerformed(evt);
            }
        });
        add(checkBtn);
        checkBtn.setBounds(310, 440, 180, 40);

        imgLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imgLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\Sindhu\\Documents\\AED\\finalproject\\EcoSystem (1)\\EcoSystem\\src\\doc.jpg")); // NOI18N
        add(imgLabel);
        imgLabel.setBounds(220, 0, 1120, 810);
    }// </editor-fold>//GEN-END:initComponents

    private void availabeAssitantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availabeAssitantActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_availabeAssitantActionPerformed

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)bentable.getModel();
        int selectedRow = bentable.getSelectedRow();
        if(selectedRow <0 ){
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning!",JOptionPane.WARNING_MESSAGE);
        }
        else{
            int patient_id = (int) bentable.getValueAt(selectedRow,0);
            String assis_name = availabeAssitant.getSelectedItem().toString();
            String availability = (String)bentable.getValueAt(selectedRow,2);
            if(!availability.equals("Pending")){
                JOptionPane.showMessageDialog(null,"This patient has been assigned to an assistant already", "Error",JOptionPane.ERROR_MESSAGE);
            }else{
                for(Network net:ecosystem.getNetworkList()){
                    for(WelfareEnterprise ent:net.getEnterpriseDirectory().getWelfareEnterpriseList()){
                      for(WelfareOrganization org:ent.getWelfareOrganizationDirectory().getWelfareOrganizationList()){
                          if(org.getName().equals("Beneficiary Organization")){
                            for(Beneficiary ben:org.getBeneficiaryDirectory().getBeneficiaryDirectory()){
                                 if(ben.getBeneficiaryId()==patient_id){
                                     ben.setDocStatus("Checkup Inprogress");
                                     ben.setAssistantName(assis_name);
                                     populateTable();
                                     JOptionPane.showMessageDialog(null, "Patient assigned to an assistant", "Success",JOptionPane.PLAIN_MESSAGE);
                                 }
                            }
                          }
                      }
                    }
                }
            }
        }
    }//GEN-LAST:event_assignBtnActionPerformed

    private void checkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)bentable.getModel();
        int selectedRow = bentable.getSelectedRow();
        String availability = (String)bentable.getValueAt(selectedRow,3);
        if(selectedRow <0 ){
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning!",JOptionPane.WARNING_MESSAGE);
        }
        else if(!availability.equals("NA")){
            JOptionPane.showMessageDialog(null,"Necessary Treatment provided for this patient already", "Error",JOptionPane.ERROR_MESSAGE);
        }else{
            String healthissue = JOptionPane.showInputDialog(null,"Update health issue for this patient");
            int patient_id = (int) bentable.getValueAt(selectedRow,0);
            String assis_name = availabeAssitant.getSelectedItem().toString();
            for(Network net:ecosystem.getNetworkList()){
                for(WelfareEnterprise ent:net.getEnterpriseDirectory().getWelfareEnterpriseList()){
                  for(WelfareOrganization org:ent.getWelfareOrganizationDirectory().getWelfareOrganizationList()){
                      if(org.getName().equals("Beneficiary Organization")){
                        for(Beneficiary ben:org.getBeneficiaryDirectory().getBeneficiaryDirectory()){
                             if(ben.getBeneficiaryId()==patient_id){
                                 ben.setCheckStatus("Completed");
                                 ben.setHealthIssue(healthissue);
                                 populateTable();
                                 JOptionPane.showMessageDialog(null, "Checkup Completed successfully", "Success",JOptionPane.PLAIN_MESSAGE);
                             }
                        }
                      }
                  }
                }
            }
            
        }
       
    }//GEN-LAST:event_checkBtnActionPerformed

    private void bentableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bentableMouseClicked
        // TODO add your handling code here:
        String msg="";
        int selectedRow = bentable.getSelectedRow();
        int patient_id = (int) bentable.getValueAt(selectedRow,0);
        String status = (String) bentable.getValueAt(selectedRow,2);
        if(status.startsWith("Test")){
            for(Network net:ecosystem.getNetworkList()){
               for(WelfareEnterprise ent:net.getEnterpriseDirectory().getWelfareEnterpriseList()){
                   for(WelfareOrganization org:ent.getWelfareOrganizationDirectory().getWelfareOrganizationList()){
                       for(Beneficiary ben:org.getBeneficiaryDirectory().getBeneficiaryDirectory()){
                           if(patient_id==ben.getBeneficiaryId()){
                               msg="<html>Temperature:"+ben.getTemp()+"<br>Blood Pressure:"+ben.getBp()+"<br>Pulse:"+ben.getPulse()+"<br>Heart rate:"+ben.getHeartrate()+"</html>";
                           }
                       }
                   }
               }
            }
            JOptionPane.showMessageDialog(null,msg);
        }
        
    }//GEN-LAST:event_bentableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JComboBox<String> availabeAssitant;
    private javax.swing.JTable bentable;
    private javax.swing.JButton checkBtn;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
