/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Health;

import Business.Beneficiaries.Beneficiary;
import Business.EcoSystem;
import Business.Enterprise.HealthEnterprise;
import Business.Enterprise.WelfareEnterprise;
import Business.Network.Network;
import Business.Organization.HealthOrganization;
import Business.Organization.Organization;
import Business.Organization.WelfareOrganization;
import Business.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sindhu
 */
public class DoctorWorkAreaPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorWorkAreaPanel
     */
   
     JPanel userProcessContainer;
    HealthEnterprise enterprise;
    EcoSystem ecosystem;
    public DoctorWorkAreaPanel(JPanel userProcessContainer, EcoSystem business, HealthEnterprise enterprise, Organization organization, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.ecosystem=business;
        populateTable();
        populateComboBox();
    }
    
    private void populateComboBox(){
        availabeAssitant.removeAllItems();
        for(HealthOrganization organization:enterprise.getHealthOrganizationDirectory().getHealthOrganizationList()){
            for(UserAccount ua:organization.getUserAccountDirectory().getUserAccountList()){
                if(String.valueOf(ua.getRole()).endsWith("NurseRole") && ua.getStatus().equals("Available")){
                    availabeAssitant.addItem(ua.getEmployee().getName());
                }
            }
        }
    }
    
    private void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel)bentable.getModel();
        dtm.setRowCount(0);
        for(Network net:ecosystem.getNetworkList()){
            for(WelfareEnterprise ent:net.getEnterpriseDirectory().getWelfareEnterpriseList()){
              for(WelfareOrganization org:ent.getWelfareOrganizationDirectory().getWelfareOrganizationList()){
                  if(org.getName().equals("Beneficiary Organization")){
                    for(Beneficiary ben:org.getBeneficiaryDirectory().getBeneficiaryDirectory()){
                       if(ben.getAssistanceType().equals("HealthCare")){
                            Object[] row = new Object[dtm.getColumnCount()];
                             row[0] = ben.getBeneficiaryId();
                             row[1] = ben.getBeneficiaryName();
                             System.out.println(ben.getCheckStatus());
                             if(ben.getCheckStatus()==null){
                                 row[2]="Pending";
                             }else if(ben.getCheckStatus().equals("Completed")){
                                 row[2]=ben.getCheckStatus();
                             }else{
                                 row[2]=ben.getCheckStatus();
                             }
                             if(ben.getHealthIssue()==null){
                                 row[3]="NA";
                             }else{
                                 row[3]=ben.getHealthIssue();
                             }
                             dtm.addRow(row);
                       }
                    }
                  }
              }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bentable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        availabeAssitant = new javax.swing.JComboBox<>();
        assignBtn = new javax.swing.JButton();
        checkBtn = new javax.swing.JButton();

        bentable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Id", "Patient name", "Statius", "Health Issue"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bentable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bentableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bentable);

        jLabel1.setText("Available Assistant:");

        availabeAssitant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        availabeAssitant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availabeAssitantActionPerformed(evt);
            }
        });

        assignBtn.setText("Assign Assistant");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });

        checkBtn.setText("Checkup done");
        checkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(availabeAssitant, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(checkBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(assignBtn)
                .addGap(210, 210, 210))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(availabeAssitant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBtn)
                    .addComponent(assignBtn))
                .addContainerGap(212, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void availabeAssitantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availabeAssitantActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_availabeAssitantActionPerformed

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)bentable.getModel();
        int selectedRow = bentable.getSelectedRow();
        if(selectedRow <0 ){
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning!",JOptionPane.WARNING_MESSAGE);
        }
        else{
            int patient_id = (int) bentable.getValueAt(selectedRow,0);
            String assis_name = availabeAssitant.getSelectedItem().toString();
            for(Network net:ecosystem.getNetworkList()){
                for(WelfareEnterprise ent:net.getEnterpriseDirectory().getWelfareEnterpriseList()){
                  for(WelfareOrganization org:ent.getWelfareOrganizationDirectory().getWelfareOrganizationList()){
                      if(org.getName().equals("Beneficiary Organization")){
                        for(Beneficiary ben:org.getBeneficiaryDirectory().getBeneficiaryDirectory()){
                             if(ben.getBeneficiaryId()==patient_id){
                                 ben.setCheckStatus("Checkup Inprogress");
                                 ben.setAssistantName(assis_name);
                                 populateTable();
                                 JOptionPane.showMessageDialog(null, "Patient assigned to an assistant", "Success",JOptionPane.PLAIN_MESSAGE);
                             }
                        }
                      }
                  }
                }
            }
        }
    }//GEN-LAST:event_assignBtnActionPerformed

    private void checkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)bentable.getModel();
        int selectedRow = bentable.getSelectedRow();
        if(selectedRow <0 ){
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning!",JOptionPane.WARNING_MESSAGE);
        }else{
            String healthissue = JOptionPane.showInputDialog(null,"Update health issue for this patient");
            int patient_id = (int) bentable.getValueAt(selectedRow,0);
            String assis_name = availabeAssitant.getSelectedItem().toString();
            for(Network net:ecosystem.getNetworkList()){
                for(WelfareEnterprise ent:net.getEnterpriseDirectory().getWelfareEnterpriseList()){
                  for(WelfareOrganization org:ent.getWelfareOrganizationDirectory().getWelfareOrganizationList()){
                      if(org.getName().equals("Beneficiary Organization")){
                        for(Beneficiary ben:org.getBeneficiaryDirectory().getBeneficiaryDirectory()){
                             if(ben.getBeneficiaryId()==patient_id){
                                 ben.setCheckStatus("Completed");
                                 ben.setHealthIssue(healthissue);
                                 populateTable();
                                 JOptionPane.showMessageDialog(null, "Checkup Completed successfully", "Success",JOptionPane.PLAIN_MESSAGE);
                             }
                        }
                      }
                  }
                }
            }
            
        }
       
    }//GEN-LAST:event_checkBtnActionPerformed

    private void bentableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bentableMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_bentableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JComboBox<String> availabeAssitant;
    private javax.swing.JTable bentable;
    private javax.swing.JButton checkBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
