/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ContributorRole;

import Business.Beneficiaries.Beneficiary;
import Business.Contribution.ContributionDetails;
import Business.EcoSystem;
import Business.Enterprise.WelfareEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.WelfareOrganization;
import Business.UserAccount.UserAccount;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sindhu
 */
public class ContributorWorkAreaPanel extends javax.swing.JPanel {

    /**
     * Creates new form ContributorWorkAreaPanel
     */
 
    WelfareEnterprise enterprise;
    EcoSystem ecosystem;
    JPanel userProcessContainer;
    Organization organization;
    String updateStatus=null;
    int cont_id=0;
  
    public ContributorWorkAreaPanel(JPanel userProcessContainer, EcoSystem system, WelfareEnterprise enterprise, Organization organization, UserAccount account) {
       initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.ecosystem = system;
        this.organization = organization;
        contTable.getTableHeader().setFont(new Font("TImes New Roman",Font.BOLD,18));
        contTable.setRowHeight(30);
        contTable.setRowMargin(10);
        populateTable();
        populateTextField();
    }

    private void populateTextField(){
        EntName.setText(enterprise.toString());
        EntName.setEnabled(false);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        contName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        endowmentItem = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        contField = new javax.swing.JTextField();
        addContBtn = new javax.swing.JButton();
        assignBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        contEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        EntName = new javax.swing.JTextField();
        imgLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(193, 161, 171));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setText("Add Contribution Details");
        add(jLabel1);
        jLabel1.setBounds(630, 140, 250, 28);

        contTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        contTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Contributor Name", "Endwoment Type", "Contribution", "Ent name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(contTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(390, 190, 690, 120);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Contributor Name :");
        add(jLabel2);
        jLabel2.setBounds(510, 340, 160, 22);

        contName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        contName.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(102, 0, 153)));
        add(contName);
        contName.setBounds(680, 340, 140, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Endowment Type :");
        add(jLabel3);
        jLabel3.setBounds(520, 440, 150, 22);

        endowmentItem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        endowmentItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fund", "Food", "Employment" }));
        endowmentItem.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(102, 0, 153)));
        add(endowmentItem);
        endowmentItem.setBounds(680, 442, 140, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("      Contribution :");
        add(jLabel4);
        jLabel4.setBounds(520, 500, 150, 22);

        contField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        contField.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(102, 0, 153)));
        add(contField);
        contField.setBounds(680, 490, 140, 30);

        addContBtn.setBackground(new java.awt.Color(153, 102, 0));
        addContBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addContBtn.setText("Add");
        addContBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addContBtnActionPerformed(evt);
            }
        });
        add(addContBtn);
        addContBtn.setBounds(500, 630, 65, 40);

        assignBtn.setBackground(new java.awt.Color(153, 102, 0));
        assignBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        assignBtn.setText("Assign to a benificiary");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });
        add(assignBtn);
        assignBtn.setBounds(700, 630, 220, 40);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Contributor Email:");
        add(jLabel5);
        jLabel5.setBounds(515, 390, 149, 22);

        contEmail.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        contEmail.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(102, 0, 153)));
        add(contEmail);
        contEmail.setBounds(680, 392, 140, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("  Enterprise Name: ");
        add(jLabel6);
        jLabel6.setBounds(520, 550, 150, 22);

        EntName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        EntName.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(102, 0, 153)));
        EntName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntNameActionPerformed(evt);
            }
        });
        add(EntName);
        EntName.setBounds(680, 550, 140, 30);

        imgLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\Sindhu\\Documents\\AED\\finalproject\\EcoSystem (1)\\EcoSystem\\src\\img-4.jpg")); // NOI18N
        add(imgLabel);
        imgLabel.setBounds(200, 110, 1140, 580);
    }// </editor-fold>//GEN-END:initComponents

    private void addContBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addContBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) contTable.getModel();
        int count = model.getRowCount()+1;
        String cont_name = contName.getText();
        String cont_email = contEmail.getText();
        String cont_type = endowmentItem.getSelectedItem().toString();
        String contribution = contField.getText();
        String entname = EntName.getText();

        ContributionDetails contDetails = new ContributionDetails();
        contDetails.setContId(count);
        contDetails.setContName(cont_name);
        contDetails.setContEmail(cont_email);
        contDetails.setContType(cont_type);
        contDetails.setContribution(contribution);
        contDetails.setEntName(entname);
        enterprise.getContributionDirectory().addContribution(contDetails);
        populateTable();
    }//GEN-LAST:event_addContBtnActionPerformed

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)contTable.getModel();
        int selectedRow = contTable.getSelectedRow();
        if(selectedRow <0 ){
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning!",JOptionPane.WARNING_MESSAGE);
        }
        else{
            String entName = (String) contTable.getValueAt(selectedRow,4);
            String assType = (String) contTable.getValueAt(selectedRow,2);
            cont_id = (int) contTable.getValueAt(selectedRow,0);
            String id = JOptionPane.showInputDialog(null, "Enter benificiary Id");
            for(Network net:ecosystem.getNetworkList()){
                for(WelfareEnterprise ent:net.getEnterpriseDirectory().getWelfareEnterpriseList()){
                    if(ent.getName().equals(enterprise.getName())){
                        for(WelfareOrganization org:ent.getWelfareOrganizationDirectory().getWelfareOrganizationList()){
                            if(org.getName().equals("Beneficiary Organization")){
                                for(Beneficiary ben:org.getBeneficiaryDirectory().getBeneficiaryDirectory()){
                                    if(ben.getBeneficiaryId()==Integer.parseInt(id)){
                                        if(entName.equals(ben.getEntName()) && assType.equals(ben.getAssistanceType()) && ben.getStatus()==null){
                                            ben.setStatus("Assigned"+ben.getAssistanceType());
                                             updateStatus = "Not Available";
                                            updateStatus(updateStatus,cont_id);
                                            populateTable();
                                            JOptionPane.showMessageDialog(null, "Assigned required assistance to this beneficiary", "Success",JOptionPane.PLAIN_MESSAGE);
                                        }else{
                                            JOptionPane.showMessageDialog(null, "Criteria does not match", "Warning",JOptionPane.WARNING_MESSAGE);
                                            break;
                                        }
                                    } 
                                 }
                            }
                        }

                    }
                }
            }
        }
        
        
    }//GEN-LAST:event_assignBtnActionPerformed

    private void EntNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EntNameActionPerformed
    private void updateStatus(String updateStatus,int cont_id){
        for (ContributionDetails cont:enterprise.getContributionDirectory().getContributionDetailsDirectory()){
            if(cont.getContId()==cont_id){
                cont.setStatus(updateStatus);
            }
        }
    }
    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel) contTable.getModel(); 
        model.setRowCount(0);
        for (ContributionDetails cont:enterprise.getContributionDirectory().getContributionDetailsDirectory()){
            Object[] row = new Object[model.getColumnCount()];
            row[0] = cont.getContId();
            row[1] = cont.getContName();
            row[2] = cont.getContType();
            row[3] = cont.getContribution();
            row[4]= cont.getEntName();
            if(cont.getStatus()==null){
                    row[5] = "Available";
            }else{      
                row[5] = cont.getStatus();
            }
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EntName;
    private javax.swing.JButton addContBtn;
    private javax.swing.JButton assignBtn;
    private javax.swing.JTextField contEmail;
    private javax.swing.JTextField contField;
    private javax.swing.JTextField contName;
    private javax.swing.JTable contTable;
    private javax.swing.JComboBox<String> endowmentItem;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
